//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcApplication1.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    
    public partial class user
    {
        public user()
        {
            this.ads = new HashSet<ad>();
            this.messages = new HashSet<message>();
        }

        [StringLength(20, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 3)]
    //    [DataType(DataType.Text, ErrorMessage="Please Use Only Text")]
        //[RegularExpression(@"^[a-zA-Z]+$", ErrorMessage = "Use letters only please")]
        public string name { get; set; }
        public Nullable<int> address { get; set; }

        [Required(ErrorMessage = "Please Enter Mobile No")]
        [Display(Name = "Mobile")]
       // [DataType(DataType.PhoneNumber, ErrorMessage = "Please Use Valid Characters")]
        [StringLength(15, ErrorMessage = "The {0} must contains {2} characters", MinimumLength = 11)]
        //[RegularExpression(@"^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$", ErrorMessage = "Entered phone format is not valid.")]
        public string phone { get; set; }

        [Required(ErrorMessage = "Please Enter Email Address")]
        [Display(Name = "Email")]
        [EmailAddress]
        public string email { get; set; }

        [Required(ErrorMessage = "Please Enter User Name")]
        //[RegularExpression(@"^[a-zA-Z]+$", ErrorMessage = "Use letters only please")]
        [StringLength(15, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]
        [Display(Name = "UserName")]
        public string username { get; set; }


        [Required(ErrorMessage = "Please Enter Password")]
        [StringLength(15, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string password { get; set; }


        [Required(ErrorMessage = "Please Enter Your New Password")]
        [Display(Name = "new Password")]
        [DataType(DataType.Password)]
        [StringLength(15, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]
        public string password2 { get; set; }

             
        [Display(Name = "Address")]
        public virtual addre addre { get; set; }
        [Display(Name = "Ads")]
        public virtual ICollection<ad> ads { get; set; }
        [Display(Name = "Messages")]
        public virtual ICollection<message> messages { get; set; }
    }
}
